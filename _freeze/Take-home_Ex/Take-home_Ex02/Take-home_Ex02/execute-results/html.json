{
  "hash": "330cce063e49b5e93778d44db04ebc80",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 02: Be Tradewise or Otherwise\"\nformat: html\nauthor: \"Sei Sar Hla Kyi\"\ndate: \"February 22, 2025\"\ndate-modified: \"2025-02-22\"\nexecute: \n  eval: true\n  echo: true\n  message: false\n  freeze: true\n  warning: false\n---\n\n\n\n# 1 Overview\n\n## 1.1 Background\n\nSince Donald Trump assumed the U.S. presidency on January 20, 2025, global trade has been a focal point of economic discussions. Singapore, as a highly open economy, is deeply affected by shifts in international trade policies and global economic trends. Understanding how Singapore’s merchandise trade has evolved since 2015 provides valuable insights into the country’s trade resilience, shifting market dependencies, and economic positioning.\n\nThis study focuses on leveraging visual analytics and time-series techniques to explore Singapore’s international trade data. By analyzing historical trade patterns, identifying trends, and applying forecasting methods, this study aims to generate actionable insights into Singapore’s trade performance over the past decade.\n\n## 1.2 Objectives\n\nThe primary objectives of this study are:\n\n1.  **Data Visualization Critique & Redesign:** Select three existing data visualizations from the dataset’s [webpage](https://www.singstat.gov.sg/modules/infographics/singapore-international-trade), critically evaluate their effectiveness, identify strengths and weaknesses, and propose and create improved visual representations.\n\n2.  **Time-Series Analysis:** Apply appropriate time-series techniques to analyze trends in Singapore’s merchandise trade. Derive meaningful conclusions from the visualizations and time-series analysis, explaining key trade trends, shifts in trade regions, and potential implications for Singapore’s economy.\n\n------------------------------------------------------------------------\n\n# 2 Methodology & R Packages Used\n\nWe will follow the outlined methodology flow for this study, starting with data import and data wrangling, and discussion and makeover of selected visualizations and time series analysis.\n\n![](methodology2.png){fig-align=\"center\" width=\"669\"}\n\n::: panel-tabset\n## Packages Used\n\n| Package | Explanation |\n|------------------------------------|------------------------------------|\n| tidyverse | to efficiently manipulate and clean data, utilizing functions from packages like `dplyr` and `tidyr` for data wrangling. |\n| readxl | allows us to import and work with excel file |\n| ggplot2 | to create informative and aesthetically pleasing visualizations, such as histograms and boxplots, to analyze the data |\n| patchwork | to combine multiple ggplot2 plots into a cohesive layout, making it easier to present related visualizations side by side |\n| SmartEDA | to help summarize dataset by providing insights such as missing values |\n| plotly | for creating interactive visualizations like zoom, and hover. |\n|  |  |\n|  |  |\n|  |  |\n|  |  |\n\n## Code to Launch\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse,readxl,SmartEDA,patchwork,plotly)\n```\n:::\n\n\n:::\n\n------------------------------------------------------------------------\n\n# 3 The Dataset\n\nThe dataset, **Merchandise Trade by Region/Market**, is obtained from the Department of Statistics Singapore (DOS) and provides detailed records of Singapore’s international trade. It consists of three Excel tabs: *Imports, Domestic Exports, and Re-Exports*, capturing monthly trade values (in million SGD) with various countries from January 2003 to January 2025. This dataset enables an in-depth analysis of Singapore’s trade flows, helping to identify key trading partners, shifting trade patterns, and trends in import and export activities over time.\n\n------------------------------------------------------------------------\n\n# 4 Data Preparation\n\n## 4.1 Importing the Data and Removing Irrelevant Rows\n\nThe code chunk below imports *MerchanciseTrade.xlsx* as three dataframes - imports, exports and reexports- into R environment by using *read_xlsx( )* from **readxl** package. \"sheet =\" tells which worksheet to read as our dataset contains multiple worksheets.\n\nThe Excel sheets also contain irrelevant rows, including data descriptions and footnotes, which need to be removed as we import. Specifically:\n\n-   **Rows 1 to 9** contain metadata and are not part of the actual dataset.\n\n-   **Row 10** contains column headers and should be set as variable names.\n\n-   **Rows 171 to 191** contain footnotes and other non-relevant information that should be excluded.\n\nTo ensure a clean dataset, we will remove these rows and set Row 10 as the header.\n\n::: panel-tabset\n## Imports\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nimports <- read_xlsx(\"data/MerchandiseTrade.xlsx\", sheet = \"T1\",skip = 9) %>%\n  slice(1:161)\ncolnames(imports) <- as.character(imports[1, ])  # Assign first row as column names\nimports <- imports[-1, ]\n```\n:::\n\n\n\n## Exports\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexports <- read_xlsx(\"data/MerchandiseTrade.xlsx\", sheet = \"T2\",skip = 9) %>%\n  slice(1:161)\ncolnames(exports) <- as.character(exports[1, ])  # Assign first row as column names\nexports <- exports[-1, ]\n```\n:::\n\n\n\n## Re-Exports\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreexports <- read_xlsx(\"data/MerchandiseTrade.xlsx\", sheet = \"T3\",skip = 9) %>%\n  slice(1:161)\ncolnames(reexports) <- as.character(reexports[1, ])  # Assign first row as column names\nreexports <- reexports[-1, ]\n```\n:::\n\n\n:::\n\n## 4.2 Checking for Missing values\n\nThe *ExpData* from **SmartEDA** package provides a quick overview of data types and missing values.\n\n::: panel-tabset\n## Imports\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nimports %>%\n  ExpData(type=1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                                          Descriptions      Value\n1                                   Sample size (nrow)        160\n2                              No. of variables (ncol)        266\n3                    No. of numeric/interger variables          0\n4                              No. of factor variables          0\n5                                No. of text variables        266\n6                             No. of logical variables          0\n7                          No. of identifier variables          1\n8                                No. of date variables          0\n9             No. of zero variance variables (uniform)          0\n10               %. of variables having complete cases 100% (266)\n11   %. of variables having >0% and <50% missing cases     0% (0)\n12 %. of variables having >=50% and <90% missing cases     0% (0)\n13          %. of variables having >=90% missing cases     0% (0)\n```\n\n\n:::\n:::\n\n\n\n## Exports\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexports %>%\n  ExpData(type=1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                                          Descriptions      Value\n1                                   Sample size (nrow)        160\n2                              No. of variables (ncol)        266\n3                    No. of numeric/interger variables          0\n4                              No. of factor variables          0\n5                                No. of text variables        266\n6                             No. of logical variables          0\n7                          No. of identifier variables          1\n8                                No. of date variables          0\n9             No. of zero variance variables (uniform)          0\n10               %. of variables having complete cases 100% (266)\n11   %. of variables having >0% and <50% missing cases     0% (0)\n12 %. of variables having >=50% and <90% missing cases     0% (0)\n13          %. of variables having >=90% missing cases     0% (0)\n```\n\n\n:::\n:::\n\n\n\n## Reexports\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreexports %>%\n  ExpData(type=1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                                          Descriptions      Value\n1                                   Sample size (nrow)        160\n2                              No. of variables (ncol)        266\n3                    No. of numeric/interger variables          0\n4                              No. of factor variables          0\n5                                No. of text variables        266\n6                             No. of logical variables          0\n7                          No. of identifier variables          1\n8                                No. of date variables          0\n9             No. of zero variance variables (uniform)          0\n10               %. of variables having complete cases 100% (266)\n11   %. of variables having >0% and <50% missing cases     0% (0)\n12 %. of variables having >=50% and <90% missing cases     0% (0)\n13          %. of variables having >=90% missing cases     0% (0)\n```\n\n\n:::\n:::\n\n\n:::\n\nBased on the results, all three data frames contain 100% complete cases, indicating the absence of missing values.\n\n## 4.3 Renaming Columns and Converting Data Type\n\nInitially, all variables in the dataset are stored as character data types. However, since all columns (except for Data Series) represent trade values in millions of SGD, they should be converted to numeric format. Additionally, we will rename the Data Series column to Markets for better readability.\n\nThe column names represent dates in the **\"YYYY MMM\"** format (e.g., `\"2025 Jan\"`, `\"2024 Dec\"`). To analyze the data effectively as a **time series**, we will need to :\n\n1.  **Reshape the dataset from wide to long format** – Instead of having separate columns for each month, we will structure the data so that each row represents a month and its corresponding trade value. A long format is particularly beneficial when working with **ggplot2** because it simplifies faceting and makes data manipulation and visualization more flexible.\n\n2.  **Convert the date column to a proper date format (`YYYY-MM`)** – This ensures consistency and compatibility with time series analysis and visualization.\n\n::: panel-tabset\n## Imports\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nimports <- imports %>%\n  rename(Markets = `Data Series`) %>% \n  mutate(across(-Markets, as.numeric)) %>%\n  pivot_longer(cols = -Markets, names_to = \"Date\", values_to = \"Trade_Value\")%>%\n  mutate(Date = parse_date_time(Date, orders = \"ym\"))%>%\n  mutate(Date = as.Date(Date)) %>%\n  arrange(Date)\n\nhead(imports)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  Markets             Date       Trade_Value\n  <chr>               <date>           <dbl>\n1 Total All Markets   2003-01-01     18539. \n2 America             2003-01-01      2385. \n3 Antigua And Barbuda 2003-01-01         0  \n4 Argentina           2003-01-01         2.3\n5 Bahamas             2003-01-01        19.2\n6 Bermuda             2003-01-01         0  \n```\n\n\n:::\n:::\n\n\n\n## Exports\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexports <- exports %>%\n  rename(Markets = `Data Series`) %>% \n  mutate(across(-Markets, as.numeric))%>%\n  pivot_longer(cols = -Markets, names_to = \"Date\", values_to = \"Trade_Value\")%>%\n  mutate(Date = parse_date_time(Date, orders = \"ym\"))%>%\n  mutate(Date = as.Date(Date)) %>%\n  arrange(Date)\n```\n:::\n\n\n\n## Reexports\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreexports <- reexports %>%\n  rename(Markets = `Data Series`) %>% \n  mutate(across(-Markets, as.numeric))%>%\n  pivot_longer(cols = -Markets, names_to = \"Date\", values_to = \"Trade_Value\")%>%\n  mutate(Date = parse_date_time(Date, orders = \"ym\"))%>%\n  mutate(Date = as.Date(Date)) %>%\n  arrange(Date)\n```\n:::\n\n\n:::\n\n## 4.4 Grouping Region or Country\n\nThe dataset contains rows that represent regions (e.g., \"Total All Market\", \"America\", \"Asia\", \"Oceania\", \"Europe\", and \"Africa\") alongside rows for individual countries. To facilitate analysis, we will add a new column (*RegionorCountry*) to classify each row as either a **region** or a **country**.\n\nThis classification allows us to easily filter out the region rows from analyses focused on country-level data, such as when creating visualizations or performing modeling tasks.\n\nIf we choose to exclude the region rows for specific analyses, we can filter them out using the newly created column, keeping only the country data for detailed exploration.\n\n::: panel-tabset\n## Imports\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Adding new coulumn \nimports <- imports %>%\n  mutate(RegionorCountry = ifelse(Markets %in% c(\"Total All Markets\", \"America\", \"Asia\", \"Oceania\", \"Europe\", \"Africa\"), \n                                    \"Region\", \"Country\"))\n\nhead(imports)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  Markets             Date       Trade_Value RegionorCountry\n  <chr>               <date>           <dbl> <chr>          \n1 Total All Markets   2003-01-01     18539.  Region         \n2 America             2003-01-01      2385.  Region         \n3 Antigua And Barbuda 2003-01-01         0   Country        \n4 Argentina           2003-01-01         2.3 Country        \n5 Bahamas             2003-01-01        19.2 Country        \n6 Bermuda             2003-01-01         0   Country        \n```\n\n\n:::\n:::\n\n\n\n## Exports\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Adding new coulumn \nexports <- exports %>%\n  mutate(RegionorCountry = ifelse(Markets %in% c(\"Total All Markets\", \"America\", \"Asia\", \"Oceania\", \"Europe\", \"Africa\"), \n                                    \"Region\", \"Country\"))\n```\n:::\n\n\n\n## Reexports\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Adding new coulumn \nreexports <- reexports %>%\n  mutate(RegionorCountry = ifelse(Markets %in% c(\"Total All Markets\", \"America\", \"Asia\", \"Oceania\", \"Europe\", \"Africa\"), \n                                    \"Region\", \"Country\"))\n```\n:::\n\n\n:::\n\n## 4.5 Combining into One Dataframe\n\nAfter all our data preparation, we can combine the three newly prepared datasets into a single unified dataframe. This step allows us to work with the data as a whole while preserving the distinction between the different trade categories. To achieve this, we use the `bind_rows()` function to stack the datasets and add a new column, `Type`, which indicates whether a row corresponds to Imports, Exports, or Re-Exports.\n\nThis combined dataframe will be more convenient for analysis, as it enables us to analyze trade data across different categories while keeping the data structured.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nimports <- imports %>%\n  mutate(Type = \"Import\")\n\nexports <- exports %>%\n  mutate(Type = \"Export\")\n\nreexports <- reexports %>%\n  mutate(Type = \"Re-Export\")\n\n# Combine all three datasets using bind_rows()\ntrade <- bind_rows(imports, exports, reexports)\n\nhead(trade)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n  Markets             Date       Trade_Value RegionorCountry Type  \n  <chr>               <date>           <dbl> <chr>           <chr> \n1 Total All Markets   2003-01-01     18539.  Region          Import\n2 America             2003-01-01      2385.  Region          Import\n3 Antigua And Barbuda 2003-01-01         0   Country         Import\n4 Argentina           2003-01-01         2.3 Country         Import\n5 Bahamas             2003-01-01        19.2 Country         Import\n6 Bermuda             2003-01-01         0   Country         Import\n```\n\n\n:::\n:::\n\n\n\nNow, we can proceed to keep a subset of the dataframe on country-level data by excluding the regions.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter only countries (exclude regions)\ncountry <- trade %>% filter(RegionorCountry == \"Country\")\n```\n:::\n\n\n\n------------------------------------------------------------------------\n\n# 5 Three Visualizations & Their Makeovers\n\n## 5.1 Visualization 1: Barchart of **Total Merchandise Trade, 2020 - 2024**\n\n![](1.png){fig-align=\"center\" width=\"731\"}\n\nThe barchart presents the total merchandise trade for the years 2020 through 2024, with each year showing two bars—representing export and import values. There are bubbles beside the bars indicating the combined total trade value for each year. A textbox also notes a 6.6% increase in trade in 2024.\n\n### 5.1.1 Pros and Cons\n\n**Pros:**\n\n-   The color coding by year makes it easier to distinguish between the different years, providing clarity at a glance.\n\n-   Clear trade value labels in each bar help viewers quickly identify the trade volume for both exports and imports.\n\n**Cons:**\n\n-   The textbox stating \"Increased 6.6% in 2024\" is not effectively supported by the barchart itself. The viewer is left wondering what exactly increased and from which point the 6.6% growth is being measured (compared to 2023 or from the beginning of 2020).\n\n-   The description does not explicitly explain that \"exports\" include \"re-exports,\" which could lead to confusion for viewers since exports are higher than imports every year.\n\n-   The total trade value for each year is not immediately clear, as it is displayed separately in a bubble, which might make it harder for viewers to correlate the bubble value with the corresponding bars.\n\n### 5.1.2 Makeover\n\nTo improve the visualization, several changes were made:\n\n-   A line chart was added alongside the bar chart to show percentage changes in trade over the years, providing context to fluctuations. This highlights trends, such as the recovery from a sharp decline in 2023 (-11.7%), emphasizing that the 6.6% increase in 2024 is part of a broader recovery. \n\n-   A footnote was added to clarify that \"exports include re-exports.\" This is an important piece of information that was missing in the original description, and its inclusion ensures the viewer has a complete understanding of what is meant by \"exports\" and why it might be higher than imports.\n\n::: panel-tabset\n## The Plot\n\n\n\n::: {.cell fig_height='30'}\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-16-1.png){width=1152}\n:::\n:::\n\n\n\n## The Code\n\n\n\n::: {.cell fig_height='30'}\n\n```{.r .cell-code}\ncountry <- country %>%\n  mutate(Year = format(as.Date(Date), \"%Y\"))\n\n# Calculate total trade value for export, import, and re-export (from 2019 to 2024)\nsummary_data <- country %>%\n  filter(Type %in% c(\"Export\", \"Import\", \"Re-Export\"), Year %in% c(\"2019\", \"2020\", \"2021\", \"2022\", \"2023\", \"2024\")) %>%\n  mutate(Trade_Value = as.numeric(Trade_Value)) %>%\n  mutate(Type = ifelse(Type == \"Re-Export\", \"Export\", Type)) %>%\n  group_by(Year, Type) %>%\n  summarise(Total_Trade_Value = sum(Trade_Value, na.rm = TRUE)) %>%\n  mutate(Total_Trade_Value_Billions = Total_Trade_Value / 1000,  # Convert to billions\n         Label = paste0(\"$\", round(Total_Trade_Value_Billions, 1))) \n\n# Calculate the total trade value for Export, Import, and Re-Export combined for each year\ntotal_trade_by_year <- summary_data %>%\n  group_by(Year) %>%\n  summarise(Total_Trade_Value_Billions = sum(Total_Trade_Value_Billions, na.rm = TRUE))\n\n# Get the 2019 total trade value for calculating the 2020 percentage change\ntotal_trade_2019_value <- total_trade_by_year$Total_Trade_Value_Billions[total_trade_by_year$Year == \"2019\"]\n\n# Calculate percentage change, keeping 2019 for reference\ntotal_trade_by_year <- total_trade_by_year %>%\n  mutate(Percentage_Change = (Total_Trade_Value_Billions / lag(Total_Trade_Value_Billions) - 1) * 100)\n\n# Manually compute the 2020 percentage change using 2019's value\ntotal_trade_by_year[total_trade_by_year$Year == \"2020\", \"Percentage_Change\"] <- \n  (total_trade_by_year$Total_Trade_Value_Billions[total_trade_by_year$Year == \"2020\"] - total_trade_2019_value) / total_trade_2019_value * 100\n\n# Remove 2019 from the dataset to only plot 2020-2024\ntotal_trade_by_year <- total_trade_by_year %>%\n  filter(Year >= 2020)\n\nsummary_data <- summary_data %>%\n  filter(Year >= 2020)\n\nsummary_data$Year <- as.integer(summary_data$Year)\ntotal_trade_by_year$Year <- as.integer(total_trade_by_year$Year)\n\n# Define limits for both axes\nylim.prim <- c(0, max(summary_data$Total_Trade_Value_Billions, na.rm = TRUE))\nylim.sec <- c(-50, 25)\n\n# Transformation coefficients for scaling percentage change\nb <- diff(ylim.prim) / diff(ylim.sec)\na <- ylim.prim[1] - b * ylim.sec[1] \n\n\nggplot() +\n  # Bar chart for Total Trade Value in Billions\n  geom_bar(data = summary_data, aes(x = Year, y = Total_Trade_Value_Billions, fill = Type),\n           stat = \"identity\", position = \"dodge\") +\n  \n  # Line chart for Percentage Change, scaled appropriately\n  geom_line(data = total_trade_by_year, aes(x = Year, y = a + Percentage_Change * b), \n            color = \"#e79251\", size = 1) +\n  geom_point(data = total_trade_by_year, aes(x = Year, y = a + Percentage_Change * b), \n             color = \"#e79251\", size = 3) + \n  \n  # Add labels for the bar chart\n  geom_text(data = summary_data, aes(x = Year, y = 0, label = Label, group = Type),\n            position = position_dodge(width = 0.9), color= \"#737373\", vjust = -4, size = 5) +\n  \n  # Label the line chart with percentage values\n  geom_text(data = total_trade_by_year, aes(x = Year, y = a + Percentage_Change * b, \n                                             label = paste0(round(Percentage_Change, 1), \"%\")), \n            color = \"black\", vjust = -0.5, size = 5) +\n  \n  # Add a red dotted line at 0% percentage change\n  geom_hline(yintercept = a, color = \"#ff9c07\", linetype = \"dotted\", size = 1) +\n  \n  # Add total value labels on the line chart\n  geom_text(data = total_trade_by_year, aes(x = Year, y = a + Percentage_Change * b,\n                                             label = paste0(\"$\", round(Total_Trade_Value_Billions, 1), \" bil\")),\n            color = \"#004aad\", vjust = 1.5, size = 5) +\n  \n  # Set the primary Y-axis (Total Trade Value) and secondary Y-axis (Percentage Change)\n  scale_y_continuous(\n    name = \"Total Trade Value (in Billions)\",\n    sec.axis = sec_axis(~(. - a) / b, name = \"Percentage Change (%)\") \n  ) +\n  scale_x_continuous(\"Year\", breaks = 2020:2024) +\n  \n  # Customize the fill colors for Export and Import\n  scale_fill_manual(values = c(\"Export\" = \"#b4ceff\", \"Import\" = \"#cfe7af\")) +\n  \n  # Add title and axis labels\n  labs(\n    title = \"Annual Exports and Imports with Percentage Change in Total Trade Value (2020-2024)\",\n    x = \"Year\",\n    y = \"Total Trade Value (in Billions)\",\n    caption = \"*Note: Exports include Re-exports\",\n    subtitle = \"Line chart shows total trade value\"\n  ) +\n  theme_minimal() +\n  \n  # Adjust the size of the title and axis titles\n  theme(\n    plot.title = element_text(size = 18, face = \"bold\"),\n    axis.title.x = element_text(size = 16, face = \"bold\"),\n    axis.text.x = element_text(size = 12),\n    axis.title.y = element_text(size = 16, face = \"bold\"),\n    axis.text.y = element_text(size = 12),\n    plot.margin = margin(t = 20, r = 10, b = 10, l = 10)\n  )\n```\n:::\n\n\n:::\n\n## 5.2 Visualization 2: Bubble Chart of **Merchandise Trade Performance with Major Trading Partners, 2024**\n\n![](2.png){fig-align=\"center\" width=\"681\"}\n\nThis bubble chart provides a visual comparison of Singapore’s exports and imports with its major trading partners in 2024. The x-axis represents total export values, while the y-axis represents total import values for each country. The size of each bubble corresponds to the total trade value, with larger bubbles indicating higher overall trade volume. Each bubble is labeled with the respective country name and total trade value.\n\nA distinctive feature of this chart is its background, which is divided diagonally into two colors: blue and green. The blue section represents countries where Singapore’s exports exceed its imports, while the green section highlights countries where Singapore imports more than it exports.\n\n### 5.2.1 Pros and Cons\n\n**Pros:**\n\n-   A clear distinction between trade surpluses and deficits is made using background colors, simplifying the identification of Singapore’s trade balance with each country.\n-   Varying bubble sizes effectively represent the scale of total trade with each country, enabling quick assessments of trading partners' significance.\n\n**Cons:**\n\n-   The EU is represented as a single entity, making comparisons with individual countries difficult due to the aggregation of trade data from multiple member states.\n-   The use of different bubble colors for each country does not carry any specific meaning, which can be misleading or add unnecessary complexity. \n-   The chart displays total trade value but doesn’t show exact export and import values immediately, requiring further interaction to access detailed information.\n\n### 5.2.2 Makeover\n\nTo improve the visualization, several modifications have been made.\n\n-   The top 10 trading countries have been selected instead of using the EU as a single entity. This allows for a more consistent comparison between individual countries.\n\n-   Instead of using background colors to distinguish trade surpluses and deficits, the bubble colors themselves now indicate whether Singapore exports more than it imports to the particular country (orange) or imports more than it exports (green). This change provides a clearer and more intuitive representation of the trade balance without relying on the background color.\n\n-   Tooltip enhancements provide clearer data when hovering over a bubble. In addition to total trade value, the exact export and import values for each country are now displayed, making it easier to grasp the trade breakdown instantly.\n\n::: panel-tabset\n## The Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-dc77aad567443d1eddef\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-dc77aad567443d1eddef\">{\"x\":{\"data\":[{\"x\":[57.621199999999995,32.469500000000004,28.422800000000002,23.706799999999998],\"y\":[74.368100000000013,84.318399999999997,38.395300000000006,29.695500000000003],\"text\":[\"Total Export to United States : S$ 57.6 Bil <br />Total Import from United States : S$ 74.4 Bil <br />Total Trade Value : S$ 132 Bil\",\"Total Export to Taiwan : S$ 32.5 Bil <br />Total Import from Taiwan : S$ 84.3 Bil <br />Total Trade Value : S$ 116.8 Bil\",\"Total Export to South Korea : S$ 28.4 Bil <br />Total Import from South Korea : S$ 38.4 Bil <br />Total Trade Value : S$ 66.8 Bil\",\"Total Export to Japan : S$ 23.7 Bil <br />Total Import from Japan : S$ 29.7 Bil <br />Total Trade Value : S$ 53.4 Bil\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(231,146,81,1)\",\"opacity\":0.69999999999999996,\"size\":[99.285727576416718,92.930262635965789,66.38170188383944,56.161571750938755],\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,0,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Exports to<br />the country exceeds<br />imports from<br />that country\",\"legendgroup\":\"Exports to<br />the country exceeds<br />imports from<br />that country\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[94.442700000000016,69.935600000000008,73.878600000000006,53.216499999999989,29.297899999999998,20.218700000000002],\"y\":[75.739599999999996,68.707899999999995,4.7436000000000007,20.938400000000001,15.177100000000003,11.675199999999998],\"text\":[\"Total Export to China : S$ 94.4 Bil <br />Total Import from China : S$ 75.7 Bil <br />Total Trade Value : S$ 170.2 Bil\",\"Total Export to Malaysia : S$ 69.9 Bil <br />Total Import from Malaysia : S$ 68.7 Bil <br />Total Trade Value : S$ 138.6 Bil\",\"Total Export to Hong Kong : S$ 73.9 Bil <br />Total Import from Hong Kong : S$ 4.7 Bil <br />Total Trade Value : S$ 78.6 Bil\",\"Total Export to Indonesia : S$ 53.2 Bil <br />Total Import from Indonesia : S$ 20.9 Bil <br />Total Trade Value : S$ 74.2 Bil\",\"Total Export to Thailand : S$ 29.3 Bil <br />Total Import from Thailand : S$ 15.2 Bil <br />Total Trade Value : S$ 44.5 Bil\",\"Total Export to India : S$ 20.2 Bil <br />Total Import from India : S$ 11.7 Bil <br />Total Trade Value : S$ 31.9 Bil\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(156,197,103,1)\",\"opacity\":0.69999999999999996,\"size\":[113.38582677165356,101.91477966853303,73.823216307210558,71.131788029369531,47.397578492320335,18.897637795275593],\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,0,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Imports from<br />that country exceeds<br />exports to<br />that country\",\"legendgroup\":\"Imports from<br />that country exceeds<br />exports to<br />that country\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[57.621199999999995,32.469500000000004,28.422800000000002,23.706799999999998],\"y\":[74.368100000000013,84.318399999999997,38.395300000000006,29.695500000000003],\"text\":[\"United States\",\"Taiwan\",\"South Korea\",\"Japan\"],\"hovertext\":[\"Total Export to United States : S$ 57.6 Bil <br />Total Import from United States : S$ 74.4 Bil <br />Total Trade Value : S$ 132 Bil\",\"Total Export to Taiwan : S$ 32.5 Bil <br />Total Import from Taiwan : S$ 84.3 Bil <br />Total Trade Value : S$ 116.8 Bil\",\"Total Export to South Korea : S$ 28.4 Bil <br />Total Import from South Korea : S$ 38.4 Bil <br />Total Trade Value : S$ 66.8 Bil\",\"Total Export to Japan : S$ 23.7 Bil <br />Total Import from Japan : S$ 29.7 Bil <br />Total Trade Value : S$ 53.4 Bil\"],\"textfont\":{\"size\":11.338582677165356,\"color\":\"rgba(0,0,0,1)\"},\"type\":\"scatter\",\"mode\":\"text\",\"hoveron\":\"points\",\"name\":\"Exports to<br />the country exceeds<br />imports from<br />that country\",\"legendgroup\":\"Exports to<br />the country exceeds<br />imports from<br />that country\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[94.442700000000016,69.935600000000008,73.878600000000006,53.216499999999989,29.297899999999998,20.218700000000002],\"y\":[75.739599999999996,68.707899999999995,4.7436000000000007,20.938400000000001,15.177100000000003,11.675199999999998],\"text\":[\"China\",\"Malaysia\",\"Hong Kong\",\"Indonesia\",\"Thailand\",\"India\"],\"hovertext\":[\"Total Export to China : S$ 94.4 Bil <br />Total Import from China : S$ 75.7 Bil <br />Total Trade Value : S$ 170.2 Bil\",\"Total Export to Malaysia : S$ 69.9 Bil <br />Total Import from Malaysia : S$ 68.7 Bil <br />Total Trade Value : S$ 138.6 Bil\",\"Total Export to Hong Kong : S$ 73.9 Bil <br />Total Import from Hong Kong : S$ 4.7 Bil <br />Total Trade Value : S$ 78.6 Bil\",\"Total Export to Indonesia : S$ 53.2 Bil <br />Total Import from Indonesia : S$ 20.9 Bil <br />Total Trade Value : S$ 74.2 Bil\",\"Total Export to Thailand : S$ 29.3 Bil <br />Total Import from Thailand : S$ 15.2 Bil <br />Total Trade Value : S$ 44.5 Bil\",\"Total Export to India : S$ 20.2 Bil <br />Total Import from India : S$ 11.7 Bil <br />Total Trade Value : S$ 31.9 Bil\"],\"textfont\":{\"size\":11.338582677165356,\"color\":\"rgba(0,0,0,1)\"},\"type\":\"scatter\",\"mode\":\"text\",\"hoveron\":\"points\",\"name\":\"Imports from<br />that country exceeds<br />exports to<br />that country\",\"legendgroup\":\"Imports from<br />that country exceeds<br />exports to<br />that country\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":43.762557077625573,\"r\":7.3059360730593621,\"b\":40.182648401826498,\"l\":43.105022831050235},\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"Top 10 Merchandise Trade Markets (2024)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.534246575342465},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-5,105],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"10\",\"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"],\"tickvals\":[0,9.9999999999999982,20,30,40,50,60,70,80,90,100],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"10\",\"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Total Export Value (Billion $)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-5,105],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"10\",\"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"],\"tickvals\":[0,9.9999999999999982,20,30,40,50,60,70,80,90,100],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"10\",\"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Total Import Value (Billion $)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":null,\"bordercolor\":null,\"borderwidth\":0,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"BubbleColor\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"73997cd7ebb\":{\"x\":{},\"y\":{},\"size\":{},\"label\":{},\"text\":{},\"fill\":{},\"type\":\"scatter\"},\"7399443b2afd\":{\"x\":{},\"y\":{},\"size\":{},\"label\":{},\"text\":{},\"fill\":{}}},\"cur_data\":\"73997cd7ebb\",\"visdat\":{\"73997cd7ebb\":[\"function (y) \",\"x\"],\"7399443b2afd\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n## The Code\n\n\n\n::: {.cell fig_height='10'}\n\n```{.r .cell-code}\ncountry_2024 <- country %>%\n  filter(Year == 2024)\n\n# Summarize Import values\nimport_2024 <- country_2024 %>%\n  filter(Type == \"Import\") %>%\n  group_by(Markets) %>%\n  summarise(Total_Import_Value = sum(Trade_Value, na.rm = TRUE)) %>%\n  ungroup()\n\n# Summarize Export values\nexport_2024 <- country_2024 %>%\n  filter(Type == \"Export\") %>%\n  group_by(Markets) %>%\n  summarise(Total_Export_Value = sum(Trade_Value, na.rm = TRUE)) %>%\n  ungroup()\n\n# Summarize Re-Export values\nreexport_2024 <- country_2024 %>%\n  filter(Type == \"Re-Export\") %>%\n  group_by(Markets) %>%\n  summarise(Total_ReExport_Value = sum(Trade_Value, na.rm = TRUE)) %>%\n  ungroup()\n\n# Merge all datasets into one\ntrade_2024 <- import_2024 %>%\n  full_join(export_2024, by = \"Markets\") %>%\n  full_join(reexport_2024, by = \"Markets\") %>%\n  mutate(Total_Export_Value = coalesce(Total_Export_Value, 0) + coalesce(Total_ReExport_Value, 0)) %>%\n  select(Markets, Total_Import_Value, Total_Export_Value) \n\ntrade_2024 <- trade_2024 %>%\n  mutate(Total_Trade_Value = Total_Import_Value + Total_Export_Value)\n\n# Select top 10 markets by total trade value\ntop_10_markets <- trade_2024 %>%\n  arrange(desc(Total_Trade_Value)) %>%\n  slice_head(n = 10)%>%\n  mutate(Markets = ifelse(Markets == \"Korea, Rep Of\", \"South Korea\", Markets))\n\n\n# Create a new variable to color the bubbles\ntop_10_markets$BubbleColor <- ifelse(top_10_markets$Total_Export_Value > top_10_markets$Total_Import_Value, \"Imports from\nthat country exceeds\nexports to\nthat country\", \"Exports to\nthe country exceeds\nimports from\nthat country\")\n\n# Bubble plot\np <- ggplot(top_10_markets, aes(y = Total_Import_Value / 1000, \n                                x = Total_Export_Value / 1000, \n                                size = Total_Trade_Value / 1000, \n                                label = Markets, \n                                text = paste(\"Total Export to\", Markets, \": S$\", round(Total_Export_Value / 1000, 1), \"Bil\",\n                                             \"\\nTotal Import from\",Markets, \": S$\", round(Total_Import_Value / 1000, 1), \"Bil\",\n                                             \"\\nTotal Trade Value : S$\", round(Total_Trade_Value / 1000, 1), \"Bil\"),\n                                fill = BubbleColor)) +\n  \n  # Bubbles\n  geom_point(alpha = 0.7, shape = 21, color = \"black\") +  \n  geom_text(vjust = -1, size = 3) +  \n  \n  scale_fill_manual(values = c(\"Imports from\nthat country exceeds\nexports to\nthat country\" = \"#9cc567\", \"Exports to\nthe country exceeds\nimports from\nthat country\" = \"#e79251\")) +  # Define colors\n  scale_size_continuous(range = c(5, 30), \n                        name = \"Total Trade Value (Billion $)\", \n                        breaks = c(50, 100, 150), \n                        labels = c(\"50\", \"100\", \"150\")) +  \n  scale_x_continuous(limits = c(0, 100), \n                     breaks = seq(0, 100, by = 10), \n                     labels = paste(seq(0, 100, by = 10))) + \n  scale_y_continuous(limits = c(0, 100), \n                     breaks = seq(0, 100, by = 10), \n                     labels = paste(seq(0, 100, by = 10))) + \n  \n  # Title and axis labels\n  labs(title = \"Top 10 Merchandise Trade Markets (2024)\", \n       y = \"Total Import Value (Billion $)\", \n       x = \"Total Export Value (Billion $)\") +   \n  theme_minimal() +\n  \n  # Removing legend\n  guides(size = guide_none(), color = guide_none()) \n\n# Interactivity-Show Trade value on hover\nggplotly(p, tooltip = \"text\")\n```\n:::\n\n\n:::\n\n## 5.3 Visualization 3:\n\n### 5.3.1 Pros and Cons\n\n### 5.3.2 Makeover\n\n------------------------------------------------------------------------\n\n# 6 Time-Series Analysis\n\n------------------------------------------------------------------------\n\n# References\n",
    "supporting": [
      "Take-home_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../../site_libs/plotly-binding-4.10.4/plotly.js\"></script>\n<script src=\"../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}